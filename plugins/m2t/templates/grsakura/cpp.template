<% import com.change_vision.jude.api.inf.model.* %>
<% import java.util.regex.Matcher %>
<% def stateInstance = u.instanceName+"_state"%>\
<% def eventInstance = u.instanceName+"_event"%>\
<% def getStateName(state){u.name+"::"+state.name}%>\
<% def getEventName(event){u.name+"_"}%>\
<% def replaceAct(act){
	if(act=~"setNextTimeout\\((\\d+)(,.+)?\\)"){
		"timer->setNextTimeout("+Matcher.getLastMatcher().group(1)+","+u.name+"_Timeout)"
	}else{act.trim();}}%>\
#include "${u.name}.h"
${u.name}::${u.name}(){
<% if(u.statemachine){%>\
	${stateInstance}=${u.initialState};
<%}%>\
<% for(reference in u.getAllReferenceClasses()){%>\
<% if (reference.name=="iRobotCreate2") {%>\
	create2 = ${reference.name}::getInstance();
<%}else{%>\
	${u.toFirstLowerCase(reference.name)} = ${reference.name}::getInstance();
<%}%>\
<%}%>\
<% if(u.initialState.entry.trim()!=""){%>\
<% for(entryAct in u.initialState.entry.normalize().split("\n")){%>\
	${replaceAct(entryAct)};	// initial entry action
<%}%>\
<%}%>\
<% if(u.initialState.doActivity.trim()!=""){%>\
<% for(doAct in u.initialState.doActivity.normalize().split("\n")){%>\
	${replaceAct(doAct)};	// initial do action
<%}%>\
<%}%>\
}
${u.name}::~${u.name}(){}

<% if(u.statemachine){%>\
void ${u.name}::transition(Event event){
	switch(${stateInstance}){
<% for(state in u.states){%>\
	case ${getStateName(state)}:
<% if(state.getSubvertexes().length!=0 && state.getSubvertexes().find{it instanceof IPseudostate}!=null){%>\
		${stateInstance} = ${getStateName(state.getSubvertexes().find{it instanceof IPseudostate}.outgoings[0].target)};
		break;
<%}else{%>\
<% for(t in state.outgoings){%>\
		if(<%if(t.guard.trim()!="") {out<<"("+t.guard+") && "}%><%if(t.event.trim()=="true"||t.event.trim()==""){%>true<% }else if(t.event.trim().toLowerCase()=="timeout"){%>${u.name}_Timeout==event<%} else {%>${t.event.trim()}==event<%}%>){
<% if(state.exit.trim()!="") {%>\
<% for(exitAct in state.exit.normalize().split("\n")){%>\
			${replaceAct(exitAct)};		//  exit action;
<%}%>\
<%}%>\
<% if(t.action.trim()!="") {%>\
<% for(transAct in t.action.normalize().split("\n")){%>\
			${replaceAct(transAct)};	// transition action
<%}%>\
<%}%>\
			${stateInstance} = ${getStateName(t.target)};
<% if(t.target.entry.trim()!=""){%>\
<% for(entryAct in t.target.entry.normalize().split("\n")){%>\
			${replaceAct(entryAct)};	// entry action
<%}%>\
<%}%>\
<% if(state.doActivity.trim()!=""){%>\
<% for(doAct in state.doActivity.normalize().split("\n")){%>\
			${replaceAct(doAct)};		// do action
<%}%>\
<%}%>\
		}
<% if(state.container instanceof IState){%>\
<% for(p in state.container.outgoings){%>\
		if(<%if(p.guard.trim()!="") {out<<"("+p.guard+") && "}%><%if(p.event.trim()=="true"||p.event.trim()==""){%>true <% } else {%>${p.event}==event<%}%>){
<% if(state.exit.trim()!="") {%>\
<% for(exitAct in state.exit.normalize().split("\n")){%>\
			${replaceAct(exitAct)};		// exit action
<%}%>\
<%}%>\
<% if(p.action.trim()!="") {%>\
			// transition action
<% for(transAct in p.action.normalize().split("\n")){%>\
			${replaceAct(transAct)};	// trans act
<%}%>\
<%}%>\
			${stateInstance} = ${getStateName(p.target)};
<% if(p.target.entry.trim()!=""){%>\
			// ${getStateName(p.target)} state : entry action;
<% for(entryAct in p.target.entry.normalize().split("\n")){%>\
			${replaceAct(entryAct)};	// entry act
<%}%>\
<%}%>\
<% if(state.doActivity.trim()!=""){%>\
			// ${getStateName(p.target)} state : do action;
<% for(doAct in state.doActivity.normalize().split("\n")){%>\
			${replaceAct(doAct)};		// do act
<%}%>\
<%}%>\
		}
<%}%>\
<%}%>\
<%}%>\
		break;
<%}%>\
<%}%>\
	default:
		break;
	}
}
<%}%>\

<% for(op in u.iclass.operations){%>\
${op.returnType.name} ${u.name}::${op.name}(<%=op.parameters.collect{it.typeExpression+" "+it.name}.join(", ")%>){
<% for(body in op.definition.split("\n")){%>\
	${body}
<%}%>\
}
<%}%>\
